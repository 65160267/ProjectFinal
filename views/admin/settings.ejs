<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö - Admin Panel</title>
  <link rel="stylesheet" href="/css/style.css" />
  <link rel="stylesheet" href="/css/performance.css" />
  <style>
    .admin-header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 20px 0;
      margin-bottom: 30px;
    }
    .admin-nav {
      background: #2c3e50;
      padding: 15px 0;
      margin-bottom: 30px;
      border-radius: 8px;
    }
    .admin-nav .container {
      display: flex;
      gap: 20px;
      flex-wrap: wrap;
    }
    .admin-nav a {
      color: #ecf0f1;
      text-decoration: none;
      padding: 10px 20px;
      border-radius: 5px;
      font-weight: 500;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .admin-nav a:hover {
      background: #34495e;
      transform: translateY(-2px);
    }
    .admin-nav a.active {
      background: #3498db;
      box-shadow: 0 3px 10px rgba(52, 152, 219, 0.3);
    }
    .settings-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
      gap: 25px;
      margin-bottom: 30px;
    }
    .settings-card {
      background: white;
      border-radius: 12px;
      padding: 25px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      border-left: 4px solid #3498db;
    }
    .settings-card h3 {
      margin: 0 0 20px 0;
      color: #2c3e50;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .form-group {
      margin-bottom: 20px;
    }
    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      color: #495057;
    }
    .form-group input,
    .form-group select,
    .form-group textarea {
      width: 100%;
      padding: 10px 15px;
      border: 1px solid #ced4da;
      border-radius: 6px;
      font-size: 14px;
      transition: border-color 0.3s ease;
    }
    .form-group input:focus,
    .form-group select:focus,
    .form-group textarea:focus {
      outline: none;
      border-color: #3498db;
      box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
    }
    .form-group textarea {
      resize: vertical;
      min-height: 80px;
    }
    .settings-btn {
      background: #3498db;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 6px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    .settings-btn:hover {
      background: #2980b9;
      transform: translateY(-1px);
    }
    .settings-btn.danger {
      background: #e74c3c;
    }
    .settings-btn.danger:hover {
      background: #c0392b;
    }
    .settings-btn.success {
      background: #27ae60;
    }
    .settings-btn.success:hover {
      background: #219a52;
    }
    .system-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
      margin-bottom: 25px;
    }
    .info-item {
      background: white;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      text-align: center;
    }
    .info-label {
      font-size: 12px;
      color: #6c757d;
      text-transform: uppercase;
      margin-bottom: 5px;
    }
    .info-value {
      font-size: 18px;
      font-weight: bold;
      color: #2c3e50;
    }
    .danger-zone {
      border-left-color: #e74c3c;
      background: #fdf2f2;
    }
    .danger-zone h3 {
      color: #e74c3c;
    }
    .switch {
      position: relative;
      display: inline-block;
      width: 50px;
      height: 24px;
    }
    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: .4s;
      border-radius: 24px;
    }
    .slider:before {
      position: absolute;
      content: "";
      height: 18px;
      width: 18px;
      left: 3px;
      bottom: 3px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }
    input:checked + .slider {
      background-color: #3498db;
    }
    input:checked + .slider:before {
      transform: translateX(26px);
    }
    .toggle-group {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }
  </style>
</head>
<body>
  <div class="admin-header">
    <div class="container">
      <h1>‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</h1>
      <p>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö</p>
    </div>
  </div>

  <div class="admin-nav">
    <div class="container">
      <a href="/admin">üìä Dashboard</a>
      <a href="/admin/users">üë• ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</a>
      <a href="/admin/books">üìö ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</a>
      <a href="/admin/exchanges">üîÑ ‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô</a>
      <a href="/admin/settings" class="active">‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</a>
      <a href="/dashboard">üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
    </div>
  </div>

  <main class="container">
    <!-- System Information -->
    <div class="system-info">
      <div class="info-item">
        <div class="info-label">Server Time</div>
        <div class="info-value" id="serverTime"><%= new Date().toLocaleString('th-TH') %></div>
      </div>
      <div class="info-item">
        <div class="info-label">Node.js Version</div>
        <div class="info-value"><%= process.version %></div>
      </div>
      <div class="info-item">
        <div class="info-label">Platform</div>
        <div class="info-value"><%= process.platform %></div>
      </div>
      <div class="info-item">
        <div class="info-label">Admin User</div>
        <div class="info-value"><%= user.username %></div>
      </div>
    </div>

    <!-- Settings Cards -->
    <div class="settings-grid">
      <!-- General Settings -->
      <div class="settings-card">
        <h3>üåê ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</h3>
        <form id="generalSettings">
          <div class="form-group">
            <label>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</label>
            <input type="text" id="siteName" value="SwapABook" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå">
          </div>
          <div class="form-group">
            <label>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</label>
            <textarea id="siteDescription" placeholder="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå">‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</textarea>
          </div>
          <div class="toggle-group">
            <label>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà</label>
            <label class="switch">
              <input type="checkbox" id="allowRegistration" checked>
              <span class="slider"></span>
            </label>
          </div>
          <div class="toggle-group">
            <label>‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà</label>
            <label class="switch">
              <input type="checkbox" id="requireBookApproval">
              <span class="slider"></span>
            </label>
          </div>
          <button type="submit" class="settings-btn">üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</button>
        </form>
      </div>

      <!-- Upload Settings -->
      <div class="settings-card">
        <h3>üìÅ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</h3>
        <form id="uploadSettings">
          <div class="form-group">
            <label>‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (MB)</label>
            <input type="number" id="maxFileSize" value="5" min="1" max="50">
          </div>
          <div class="form-group">
            <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï</label>
            <input type="text" id="allowedTypes" value="jpg,jpeg,png,gif" placeholder="jpg,jpeg,png,gif">
          </div>
          <div class="toggle-group">
            <label>‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</label>
            <label class="switch">
              <input type="checkbox" id="autoResize" checked>
              <span class="slider"></span>
            </label>
          </div>
          <button type="submit" class="settings-btn">üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</button>
        </form>
      </div>

      <!-- Email Settings -->
      <div class="settings-card">
        <h3>üìß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•</h3>
        <form id="emailSettings">
          <div class="form-group">
            <label>SMTP Server</label>
            <input type="text" id="smtpServer" placeholder="smtp.gmail.com">
          </div>
          <div class="form-group">
            <label>SMTP Port</label>
            <input type="number" id="smtpPort" value="587">
          </div>
          <div class="form-group">
            <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á</label>
            <input type="email" id="senderEmail" placeholder="noreply@swapbook.com">
          </div>
          <div class="toggle-group">
            <label>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
            <label class="switch">
              <input type="checkbox" id="enableEmail">
              <span class="slider"></span>
            </label>
          </div>
          <button type="submit" class="settings-btn">üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</button>
        </form>
      </div>

      <!-- Security Settings -->
      <div class="settings-card">
        <h3>üîí ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</h3>
        <form id="securitySettings">
          <div class="form-group">
            <label>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥</label>
            <input type="number" id="minPasswordLength" value="6" min="4" max="20">
          </div>
          <div class="toggle-group">
            <label>‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô</label>
            <label class="switch">
              <input type="checkbox" id="complexPassword">
              <span class="slider"></span>
            </label>
          </div>
          <div class="toggle-group">
            <label>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô reCAPTCHA</label>
            <label class="switch">
              <input type="checkbox" id="enableRecaptcha">
              <span class="slider"></span>
            </label>
          </div>
          <div class="form-group">
            <label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ Session (‡∏ô‡∏≤‡∏ó‡∏µ)</label>
            <input type="number" id="sessionTimeout" value="60" min="15" max="1440">
          </div>
          <button type="submit" class="settings-btn">üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</button>
        </form>
      </div>

      <!-- Database Management -->
      <div class="settings-card">
        <h3>üóÑÔ∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
        <div class="form-group">
          <label>‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</label>
          <button type="button" class="settings-btn success" onclick="backupDatabase()">
            üíæ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
          </button>
        </div>
        <div class="form-group">
          <label>‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</label>
          <button type="button" class="settings-btn" onclick="cleanupData()">
            üßπ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
          </button>
        </div>
        <div class="form-group">
          <label>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</label>
          <button type="button" class="settings-btn" onclick="checkIntegrity()">
            üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </button>
        </div>
        <div class="form-group">
          <label>‡∏î‡∏π Debug ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</label>
          <a href="/debug" class="settings-btn" style="display: inline-block; text-decoration: none;">
            üêõ Debug Database
          </a>
        </div>
      </div>

      <!-- Danger Zone -->
      <div class="settings-card danger-zone">
        <h3>‚ö†Ô∏è Danger Zone</h3>
        <div class="form-group">
          <label>‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</label>
          <p style="font-size: 13px; color: #6c757d; margin: 5px 0 15px 0;">
            ‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏£‡∏∞‡∏ö‡∏ö
          </p>
          <button type="button" class="settings-btn danger" onclick="resetSystem()">
            ‚ö†Ô∏è ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö
          </button>
        </div>
        <div class="form-group">
          <label>‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå</label>
          <p style="font-size: 13px; color: #6c757d; margin: 5px 0 15px 0;">
            ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Node.js
          </p>
          <button type="button" class="settings-btn danger" onclick="restartServer()">
            üîÑ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
          </button>
        </div>
      </div>
    </div>
  </main>

  <footer class="site-footer">
    <div class="container footer-bottom">
      <div class="copyright">Admin Panel - SwapABook <%= new Date().getFullYear() %></div>
    </div>
  </footer>

  <%- include('../partials/report_footer') %>

  <script src="/js/performance.js"></script>
  <script>
    // Update server time every second
    function updateServerTime() {
      document.getElementById('serverTime').textContent = new Date().toLocaleString('th-TH');
    }
    setInterval(updateServerTime, 1000);

    // Form submission handlers
    document.getElementById('generalSettings').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      saveSettings('general', formData);
    });

    document.getElementById('uploadSettings').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      saveSettings('upload', formData);
    });

    document.getElementById('emailSettings').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      saveSettings('email', formData);
    });

    document.getElementById('securitySettings').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      saveSettings('security', formData);
    });

    // Save settings function
    async function saveSettings(type, formData) {
      try {
        // Convert FormData to regular object
        const settings = {};
        const form = document.getElementById(type + 'Settings');
        const inputs = form.querySelectorAll('input, textarea, select');
        
        inputs.forEach(input => {
          if (input.type === 'checkbox') {
            settings[input.id] = input.checked;
          } else {
            settings[input.id] = input.value;
          }
        });

        console.log(`Saving ${type} settings:`, settings);
        
        // For now, just show success message
        // In a real implementation, you would send this to the server
        alert(`‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ${type} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
        
        // TODO: Implement actual API call to save settings
        /*
        const response = await fetch(`/admin/api/settings/${type}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(settings)
        });
        
        const result = await response.json();
        if (result.success) {
          alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
        } else {
          alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + result.error);
        }
        */
      } catch (error) {
        console.error('Error saving settings:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤');
      }
    }

    // Database management functions
    function backupDatabase() {
      if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        alert('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤');
        // TODO: Implement database backup
      }
    }

    function cleanupData() {
      if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        alert('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤');
        // TODO: Implement data cleanup
      }
    }

    function checkIntegrity() {
      alert('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤');
      // TODO: Implement integrity check
    }

    // Danger zone functions
    function resetSystem() {
      const confirmation = prompt('‡∏û‡∏¥‡∏°‡∏û‡πå "RESET" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö:');
      if (confirmation === 'RESET') {
        alert('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤ - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢');
        // TODO: Implement system reset (very carefully!)
      } else {
        alert('‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å');
      }
    }

    function restartServer() {
      if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà')) {
        alert('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤');
        // TODO: Implement server restart
      }
    }

    console.log('Admin Settings loaded');
  </script>
</body>
</html>